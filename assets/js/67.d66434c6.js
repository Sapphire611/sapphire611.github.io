(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{492:function(t,s,a){"use strict";a.r(s);var n=a(1),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"sql相关"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql相关"}},[t._v("#")]),t._v(" SQL相关")]),t._v(" "),s("h3",{attrs:{id:"mysql-mongodb-redis-介绍-分别在哪些场景下发挥优势"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql-mongodb-redis-介绍-分别在哪些场景下发挥优势"}},[t._v("#")]),t._v(" Mysql & MongoDB & Redis 介绍，分别在哪些场景下发挥优势？")]),t._v(" "),s("blockquote",[s("p",[t._v("MySQL、MongoDB 和 Redis 都是常用的数据库系统，它们在不同的应用场景下发挥优势。")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("MySQL 是一种关系型数据库管理系统，具有高度可移植性、稳定性和安全性。它在处理复杂的关系型数据时表现优越，例如在订单管理、用户管理等应用中。")])]),t._v(" "),s("li",[s("p",[t._v("MongoDB 是一种文档型数据库系统，它提供了高性能、高可扩展性和高可用性。它能够轻松处理大量非结构化数据，例如在日志管理、用户行为分析等应用中。")])]),t._v(" "),s("li",[s("p",[t._v("Redis 是一种内存型数据库系统，它支持快速读写，具有高吞吐量和低延迟。它适用于缓存、消息队列和其他对实时性要求较高的应用，例如在实时推荐、游戏状态管理等应用中。")])])]),t._v(" "),s("h3",{attrs:{id:"查找-4-月份的日志-基于-name-去重"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查找-4-月份的日志-基于-name-去重"}},[t._v("#")]),t._v(" 查找 4 月份的日志，基于 name 去重")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("Log\nid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" actions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" createdTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" modifiedTime\n")])])]),s("h4",{attrs:{id:"mongodb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mongodb"}},[t._v("#")]),t._v(" mongodb:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("logs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("aggregate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("$match")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("createdTime")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("$gte")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ISODate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2023-04-01T00:00:00.000Z'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里取决于时间戳的格式 ISO/unix")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("$lt")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ISODate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2023-05-01T00:00:00.000Z'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("$group")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("_id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 基于name字段去重")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("original")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("$first")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$$ROOT'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在original中保留$group第一个结果，用于显示。")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// （$push会保留重复的结果）")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("$replaceRoot")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("newRoot")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$original'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 让original变成根节点")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"mysql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql"}},[t._v("#")]),t._v(" mysql:")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("action")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("createdTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("modifiedTime\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Log\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" createdTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("BETWEEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2022-04-01'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2022-04-30'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("action")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("createdTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("modifiedTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"多实例情况下-怎么通过-redis-防止定时任务多次执行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多实例情况下-怎么通过-redis-防止定时任务多次执行"}},[t._v("#")]),t._v(" 多实例情况下，怎么通过 redis 防止定时任务多次执行？")]),t._v(" "),s("blockquote",[s("p",[t._v("在多实例情况下，可以使用 Redis 分布式锁来防止定时任务多次执行。")])]),t._v(" "),s("p",[t._v("1.在执行定时任务之前，使用 Redis 的 SETNX 命令尝试获取锁。如果获取成功，说明该实例获得了锁，可以执行定时任务。")]),t._v(" "),s("p",[t._v("2.在执行完定时任务之后，使用 Redis 的 DEL 命令释放锁。")]),t._v(" "),s("p",[t._v("3.如果获取锁失败，说明其他实例已经获得了锁，该实例应该等待其他实例释放锁。")]),t._v(" "),s("p",[t._v("代码示例：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Redis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ioredis'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" redis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Redis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" taskName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myTask'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" lockTTL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// lock expires in 60 seconds")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("runTask")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// try to acquire lock")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" lockAcquired "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setnx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("taskName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("lockAcquired"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Task already running, exiting...'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// set lock expiration")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expire")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("taskName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lockTTL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// perform task")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Running task...'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// release lock")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("del")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("taskName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("这样可以确保一次只有一个实例在执行定时任务，避免了多次执行的问题。")])]),t._v(" "),s("blockquote",[s("p",[t._v("需要注意的是使用 Redis 分布式锁时，要尽量避免死锁的情况，如果锁被占用过长可以在超时时间后自动释放锁或者人工释放。")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"mysql-查询学生三门科目总分最高的-前三名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql-查询学生三门科目总分最高的-前三名"}},[t._v("#")]),t._v(" Mysql 查询学生三门科目总分最高的 前三名")]),t._v(" "),s("p",[t._v("学生和成绩分表")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" students "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" scores "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  student_id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  subject "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  score "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("score"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" total\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" students\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" scores "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" scores"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("student_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" students"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" name\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" total "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("desc")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("limit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),s("hr"),t._v(" "),s("p",[t._v("学生和成绩合表")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" students "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  subject1_score "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  subject2_score "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  subject3_score "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("subject1_score "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" subject2_score "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" subject3_score"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" total\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" student\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" total "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("desc")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("limit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),s("h2",{attrs:{id:"mysql-和-mongodb-的索引数据结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql-和-mongodb-的索引数据结构"}},[t._v("#")]),t._v(" MySQL 和 MongoDB 的索引数据结构")]),t._v(" "),s("blockquote",[s("p",[t._v("MySQL 的默认索引结构是 B+树，这是大多数存储引擎（如 InnoDB）使用的数据结构。MongoDB 默认使用的索引数据结构是 B树（具体来说是 B-树的一种变体）。")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("特性")]),t._v(" "),s("th",[t._v("MySQL")]),t._v(" "),s("th",[t._v("MongoDB")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("默认索引结构")])]),t._v(" "),s("td",[t._v("B+树")]),t._v(" "),s("td",[t._v("B树")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("主键索引")])]),t._v(" "),s("td",[t._v("PRIMARY KEY（唯一且非空）")]),t._v(" "),s("td",[t._v("_id 字段（自动创建唯一索引）")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("唯一索引")])]),t._v(" "),s("td",[t._v("UNIQUE KEY")]),t._v(" "),s("td",[t._v("唯一索引（unique: true）")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("组合索引")])]),t._v(" "),s("td",[t._v("支持（多列联合索引）")]),t._v(" "),s("td",[t._v("支持（复合索引）")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("全文索引")])]),t._v(" "),s("td",[t._v("FULLTEXT（仅限文本类型）")]),t._v(" "),s("td",[t._v("文本索引（text index）")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("空间索引")])]),t._v(" "),s("td",[t._v("SPATIAL（GIS地理数据）")]),t._v(" "),s("td",[t._v("2dsphere/2d（地理空间索引）")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("特殊索引")])]),t._v(" "),s("td",[t._v("前缀索引（部分字符）")]),t._v(" "),s("td",[t._v("多键索引（数组字段）、哈希索引、TTL索引（自动过期）")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("稀疏索引")])]),t._v(" "),s("td",[t._v("不支持")]),t._v(" "),s("td",[t._v("支持（仅索引包含字段的文档）")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("索引覆盖查询")])]),t._v(" "),s("td",[t._v("支持（Using index）")]),t._v(" "),s("td",[t._v("支持（covered query）")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("索引限制")])]),t._v(" "),s("td",[t._v("每表最多64个二级索引")]),t._v(" "),s("td",[t._v("无硬性限制")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("索引创建方式")])]),t._v(" "),s("td",[t._v("CREATE INDEX")]),t._v(" "),s("td",[t._v("createIndex()")])])])]),t._v(" "),s("h3",{attrs:{id:"数据结构对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据结构对比"}},[t._v("#")]),t._v(" 数据结构对比")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("对比项")]),t._v(" "),s("th",[t._v("B+树（MySQL）")]),t._v(" "),s("th",[t._v("B树（MongoDB）")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("数据存储位置")])]),t._v(" "),s("td",[t._v("仅叶子节点存储数据")]),t._v(" "),s("td",[t._v("所有节点都可能存储数据")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("查询稳定性")])]),t._v(" "),s("td",[t._v("所有查询路径长度相同")]),t._v(" "),s("td",[t._v("查询路径长度可能不同")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("范围查询")])]),t._v(" "),s("td",[t._v("更高效（叶子节点链表连接）")]),t._v(" "),s("td",[t._v("需要更多磁盘I/O")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("写入性能")])]),t._v(" "),s("td",[t._v("可能需要更多分裂操作")]),t._v(" "),s("td",[t._v("相对更高效的写入")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("内存利用率")])]),t._v(" "),s("td",[t._v("非叶子节点只存键，利用率更高")]),t._v(" "),s("td",[t._v("节点存储数据，利用率较低")])])])]),t._v(" "),s("h2",{attrs:{id:"b-tree"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#b-tree"}},[t._v("#")]),t._v(" B Tree")]),t._v(" "),s("h3",{attrs:{id:"b树、b-树与b-树的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#b树、b-树与b-树的区别"}},[t._v("#")]),t._v(" B树、B-树与B+树的区别")]),t._v(" "),s("p",[t._v("一种平衡的多路搜索树，用于磁盘等直接存取设备")]),t._v(" "),s("blockquote",[s("p",[t._v('实际上"B-"中的"-"是连字符而非减号，B-树就是B树')])]),t._v(" "),s("p",[t._v("B树：所有节点都存储数据")]),t._v(" "),s("p",[t._v("B+树：B树的变种，在数据库系统中更为常用")]),t._v(" "),s("p",[t._v("只有叶子节点存储数据，非叶子节点只存储键值作为索引")]),t._v(" "),s("hr"),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("特性")]),t._v(" "),s("th",[t._v("B树(B-树)")]),t._v(" "),s("th",[t._v("B+树")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("数据存储位置")]),t._v(" "),s("td",[t._v("所有节点都存储数据")]),t._v(" "),s("td",[t._v("只有叶子节点存储数据")])]),t._v(" "),s("tr",[s("td",[t._v("叶子节点链接")]),t._v(" "),s("td",[t._v("叶子节点不互相链接")]),t._v(" "),s("td",[t._v("叶子节点通过指针互相链接形成链表")])]),t._v(" "),s("tr",[s("td",[t._v("查询性能")]),t._v(" "),s("td",[t._v("可能在非叶子节点命中，查询不稳定")]),t._v(" "),s("td",[t._v("必须到叶子节点，查询更稳定")])]),t._v(" "),s("tr",[s("td",[t._v("范围查询")]),t._v(" "),s("td",[t._v("效率较低")]),t._v(" "),s("td",[t._v("效率高(通过叶子节点链表)")])]),t._v(" "),s("tr",[s("td",[t._v("非叶子节点")]),t._v(" "),s("td",[t._v("存储键值和数据")]),t._v(" "),s("td",[t._v("只存储键值作为索引")])]),t._v(" "),s("tr",[s("td",[t._v("空间利用率")]),t._v(" "),s("td",[t._v("相对较低")]),t._v(" "),s("td",[t._v("更高")])]),t._v(" "),s("tr",[s("td",[t._v("适用场景")]),t._v(" "),s("td",[t._v("文件系统、少量数据")]),t._v(" "),s("td",[t._v("数据库索引、海量数据")])]),t._v(" "),s("tr",[s("td",[t._v("相同键值存储")]),t._v(" "),s("td",[t._v("可能分散在不同层级节点")]),t._v(" "),s("td",[t._v("相同键值只出现在叶子节点")])]),t._v(" "),s("tr",[s("td",[t._v("插入/删除成本")]),t._v(" "),s("td",[t._v("较高（可能涉及多层节点调整）")]),t._v(" "),s("td",[t._v("较低（调整通常局限在叶子节点）")])]),t._v(" "),s("tr",[s("td",[t._v("全表扫描效率")]),t._v(" "),s("td",[t._v("需要遍历整棵树")]),t._v(" "),s("td",[t._v("只需遍历叶子节点链表")])])])]),t._v(" "),s("h4",{attrs:{id:"补充说明-可直接复制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#补充说明-可直接复制"}},[t._v("#")]),t._v(" 补充说明（可直接复制）：")]),t._v(" "),s("p",[t._v('B-树就是B树，名称中的"-"是连字符而非减号')]),t._v(" "),s("p",[t._v("B+树优势：")]),t._v(" "),s("p",[t._v("更适合磁盘存储（减少I/O次数）")]),t._v(" "),s("p",[t._v("范围查询性能提升10倍以上（实测）")]),t._v(" "),s("p",[t._v("非叶子节点可缓存更多键值（典型配置：B+树单个节点可存500-1000个键）")]),t._v(" "),s("p",[t._v("经典应用：")]),t._v(" "),s("p",[t._v("MySQL的InnoDB引擎：B+树")]),t._v(" "),s("p",[t._v("MongoDB默认索引：B树")]),t._v(" "),s("p",[t._v("Linux文件系统（如ext4）：B树")])])}),[],!1,null,null,null);s.default=r.exports}}]);