(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{470:function(t,_,v){"use strict";v.r(_);var e=v(1),r=Object(e.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"node-常用框架简介"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#node-常用框架简介"}},[t._v("#")]),t._v(" Node 常用框架简介")]),t._v(" "),_("h3",{attrs:{id:"express"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#express"}},[t._v("#")]),t._v(" Express")]),t._v(" "),_("blockquote",[_("p",[t._v("元老级框架，是Node.JS 诞生之初，用于 基于Node.js以及Chrome V8引擎，快速、极简的JS服务端开发")])]),t._v(" "),_("p",[_("a",{attrs:{href:"https://www.expressjs.com.cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Express"),_("OutboundLink")],1)]),t._v(" "),_("hr"),t._v(" "),_("h3",{attrs:{id:"nest-js"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#nest-js"}},[t._v("#")]),t._v(" Nest.js")]),t._v(" "),_("blockquote",[_("p",[t._v("有规范的框架,部分功能基于Express")])]),t._v(" "),_("blockquote",[_("p",[t._v("完全支持TS并整合其他功能(GraphQl、WebSocket)")])]),t._v(" "),_("blockquote",[_("p",[t._v("堪称node中的Spring，深度使用注解特性,配合TYPEORM可以在node下拥有不输SPRING的面向切面编程的体验～")])]),t._v(" "),_("p",[_("a",{attrs:{href:"https://nestjs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nest.js"),_("OutboundLink")],1)]),t._v(" "),_("h3",{attrs:{id:"nest-守卫、拦截器、中间件-的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#nest-守卫、拦截器、中间件-的区别"}},[t._v("#")]),t._v(" Nest 守卫、拦截器、中间件 的区别")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("特性")]),t._v(" "),_("th",[t._v("中间件(Middleware)")]),t._v(" "),_("th",[t._v("守卫(Guard)")]),t._v(" "),_("th",[t._v("拦截器(Interceptor)")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[_("strong",[t._v("主要用途")])]),t._v(" "),_("td",[t._v("请求预处理（日志、CORS、请求验证等）")]),t._v(" "),_("td",[t._v("权限控制和访问验证（角色验证、JWT验证等）")]),t._v(" "),_("td",[t._v("响应转换、异常处理、额外业务逻辑")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("执行顺序")])]),t._v(" "),_("td",[t._v("最先执行")]),t._v(" "),_("td",[t._v("中间件之后，拦截器之前")]),t._v(" "),_("td",[t._v("守卫之后，路由处理器前后")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("访问上下文")])]),t._v(" "),_("td",[t._v("只能访问Request/Response对象")]),t._v(" "),_("td",[t._v("可以获取ExecutionContext")]),t._v(" "),_("td",[t._v("可以获取ExecutionContext")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("修改请求")])]),t._v(" "),_("td",[t._v("可以")]),t._v(" "),_("td",[t._v("不可以")]),t._v(" "),_("td",[t._v("可以")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("修改响应")])]),t._v(" "),_("td",[t._v("可以")]),t._v(" "),_("td",[t._v("不可以")]),t._v(" "),_("td",[t._v("可以")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("终止请求")])]),t._v(" "),_("td",[t._v("可以（通过不调用next()）")]),t._v(" "),_("td",[t._v("可以（返回false时）")]),t._v(" "),_("td",[t._v("不可以")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("异步支持")])]),t._v(" "),_("td",[t._v("有限支持")]),t._v(" "),_("td",[t._v("完全支持（Promise/Observable）")]),t._v(" "),_("td",[t._v("完全支持（RxJS操作）")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("典型应用场景")])]),t._v(" "),_("td",[t._v("- 请求日志记录"),_("br"),t._v("- 设置HTTP头"),_("br"),t._v("- 请求体解析")]),t._v(" "),_("td",[t._v("- 角色验证"),_("br"),t._v("- 权限检查"),_("br"),t._v("- 访问控制")]),t._v(" "),_("td",[t._v("- 统一响应格式"),_("br"),t._v("- 异常映射"),_("br"),t._v("- 缓存处理")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("全局注册方式")])]),t._v(" "),_("td",[_("code",[t._v("MiddlewareConsumer")]),t._v("的"),_("code",[t._v("configure")]),t._v("方法")]),t._v(" "),_("td",[_("code",[t._v("APP_GUARD")]),t._v("提供者")]),t._v(" "),_("td",[_("code",[t._v("APP_INTERCEPTOR")]),t._v("提供者")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("局部注册方式")])]),t._v(" "),_("td",[t._v("模块的"),_("code",[t._v("configure")]),t._v("方法中指定路由")]),t._v(" "),_("td",[_("code",[t._v("@UseGuards()")]),t._v("装饰器")]),t._v(" "),_("td",[_("code",[t._v("@UseInterceptors()")]),t._v("装饰器")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("能否获取处理器信息")])]),t._v(" "),_("td",[t._v("否")]),t._v(" "),_("td",[t._v("是（通过ExecutionContext）")]),t._v(" "),_("td",[t._v("是（通过ExecutionContext）")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("修改响应时机")])]),t._v(" "),_("td",[t._v("路由处理器执行前")]),t._v(" "),_("td",[t._v("路由处理器执行前")]),t._v(" "),_("td",[t._v("路由处理器执行前后均可")])])])]),t._v(" "),_("h3",{attrs:{id:"req-res-与-executioncontext-的核心区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#req-res-与-executioncontext-的核心区别"}},[t._v("#")]),t._v(" req/res 与 ExecutionContext 的核心区别")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("特性")]),t._v(" "),_("th",[_("code",[t._v("req")]),t._v(" / "),_("code",[t._v("res")]),t._v(" 对象")]),t._v(" "),_("th",[_("code",[t._v("ExecutionContext")]),t._v(" (执行上下文)")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[_("strong",[t._v("来源")])]),t._v(" "),_("td",[t._v("底层框架（如 Express/Fastify）的原始对象")]),t._v(" "),_("td",[t._v("NestJS 抽象层提供的上下文包装器")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("访问方式")])]),t._v(" "),_("td",[t._v("直接操作（如 "),_("code",[t._v("req.headers")]),t._v("）")]),t._v(" "),_("td",[t._v("通过方法链获取（如 "),_("code",[t._v("context.switchToHttp().getRequest()")]),t._v("）")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("功能范围")])]),t._v(" "),_("td",[t._v("仅限 HTTP 请求/响应的原始操作")]),t._v(" "),_("td",[t._v("包含路由、控制器、处理器等元信息")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("协议支持")])]),t._v(" "),_("td",[t._v("仅支持当前协议（如 HTTP）")]),t._v(" "),_("td",[t._v("支持 HTTP/WebSocket/RPC 等多协议统一接口")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("元数据访问")])]),t._v(" "),_("td",[t._v("无法访问 NestJS 装饰器元数据")]),t._v(" "),_("td",[t._v("可读取装饰器元数据（如 "),_("code",[t._v("@Roles()")]),t._v("）")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("控制器关联性")])]),t._v(" "),_("td",[t._v("无关联")]),t._v(" "),_("td",[t._v("可获取当前控制器类和方法（"),_("code",[t._v("getClass()")]),t._v("/"),_("code",[t._v("getHandler()")]),t._v("）")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("依赖注入")])]),t._v(" "),_("td",[t._v("无法使用 DI 容器")]),t._v(" "),_("td",[t._v("可通过 "),_("code",[t._v("getModuleRef()")]),t._v(" 动态解析依赖")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("推荐使用场景")])]),t._v(" "),_("td",[t._v("- 简单请求/响应操作"),_("br"),t._v("- 快速原型开发")]),t._v(" "),_("td",[t._v("- 需要路由信息"),_("br"),t._v("- 多协议支持"),_("br"),t._v("- 权限控制等复杂逻辑")])])])]),t._v(" "),_("h3",{attrs:{id:"orm-的选型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#orm-的选型"}},[t._v("#")]),t._v(" ORM 的选型")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("ORM")]),t._v(" "),_("th",[t._v("类型")]),t._v(" "),_("th",[t._v("语言/风格")]),t._v(" "),_("th",[t._v("数据模型定义方式")]),t._v(" "),_("th",[t._v("迁移支持")]),t._v(" "),_("th",[t._v("事务支持")]),t._v(" "),_("th",[t._v("关联关系")]),t._v(" "),_("th",[t._v("原生 SQL 支持")]),t._v(" "),_("th",[t._v("活跃度")]),t._v(" "),_("th",[t._v("特色功能")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("TypeORM")]),t._v(" "),_("td",[t._v("传统 ORM")]),t._v(" "),_("td",[t._v("TypeScript/JS")]),t._v(" "),_("td",[t._v("装饰器 + 类")]),t._v(" "),_("td",[t._v("✅")]),t._v(" "),_("td",[t._v("✅")]),t._v(" "),_("td",[t._v("✅")]),t._v(" "),_("td",[t._v("✅")]),t._v(" "),_("td",[t._v("高")]),t._v(" "),_("td",[t._v("支持 ActiveRecord/DataMapper")])]),t._v(" "),_("tr",[_("td",[t._v("Prisma")]),t._v(" "),_("td",[t._v("查询构建器")]),t._v(" "),_("td",[t._v("TypeScript")]),t._v(" "),_("td",[t._v("Prisma Schema 文件")]),t._v(" "),_("td",[t._v("✅")]),t._v(" "),_("td",[t._v("✅")]),t._v(" "),_("td",[t._v("✅")]),t._v(" "),_("td",[t._v("❌")]),t._v(" "),_("td",[t._v("高")]),t._v(" "),_("td",[t._v("类型安全、自动生成客户端")])]),t._v(" "),_("tr",[_("td",[t._v("Sequelize")]),t._v(" "),_("td",[t._v("传统 ORM")]),t._v(" "),_("td",[t._v("JavaScript")]),t._v(" "),_("td",[t._v("类/配置对象")]),t._v(" "),_("td",[t._v("✅")]),t._v(" "),_("td",[t._v("✅")]),t._v(" "),_("td",[t._v("✅")]),t._v(" "),_("td",[t._v("✅")]),t._v(" "),_("td",[t._v("中")]),t._v(" "),_("td",[t._v("多数据库支持、Promise 基础")])])])]),t._v(" "),_("hr"),t._v(" "),_("h3",{attrs:{id:"koa"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#koa"}},[t._v("#")]),t._v(" Koa")]),t._v(" "),_("blockquote",[_("p",[t._v("相当轻量，用法类似Express，简单上手")])]),t._v(" "),_("blockquote",[_("p",[t._v("需要自行去官方的 Middleware 寻找（koa-router,bodyParser,logger...），搭配千奇百怪，总有一款适合你")])]),t._v(" "),_("blockquote",[_("p",[t._v("koa常常与express一起比较，都是偏底层的无态度的Web框架")])]),t._v(" "),_("p",[_("a",{attrs:{href:"https://koajs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Koa"),_("OutboundLink")],1)]),t._v(" "),_("hr"),t._v(" "),_("h3",{attrs:{id:"egg-js"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#egg-js"}},[t._v("#")]),t._v(" Egg.js")]),t._v(" "),_("blockquote",[_("p",[t._v("源于阿里,约定优于配置,整合了大量Koa的功能并封装")])]),t._v(" "),_("blockquote",[_("p",[t._v("支持Ts，类似Koa的洋葱圈模型的开发方式，和AOP编程还是有点区别的")])]),t._v(" "),_("blockquote",[_("p",[t._v("企业级规范很多，但各方面能力极强，定位是框架的框架")])]),t._v(" "),_("p",[_("a",{attrs:{href:"https://eggjs.github.io/zh/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Egg.js"),_("OutboundLink")],1)]),t._v(" "),_("hr"),t._v(" "),_("h3",{attrs:{id:"midway-js"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#midway-js"}},[t._v("#")]),t._v(" Midway.js")]),t._v(" "),_("blockquote",[_("p",[t._v("源于阿里,感觉对标 Nest.js，深度使用注解特性")])]),t._v(" "),_("blockquote",[_("p",[t._v("Midway 基于 TypeScript 开发，结合了面向对象（OOP + Class + IoC）与函数式（FP + Function + Hooks）两种编程范式，并在此之上支持了 Web / 全栈 / 微服务 / RPC / Socket / Serverless 等多种场景，致力于为用户提供简单、易用、可靠的 Node.js 服务端研发体验。")])]),t._v(" "),_("blockquote",[_("p",[t._v("虽然社区已经有 nest 这样的框架，但是这些产品的维护、协作、修改都会受到商业化产品的制约，也无法做到需求的快速迭代和安全性保障，整体的研发理念也和我们不同，为此，我们需要有一套自研的框架体系")])]),t._v(" "),_("p",[_("a",{attrs:{href:"https://midwayjs.org/docs/intro",target:"_blank",rel:"noopener noreferrer"}},[t._v("Midway.js"),_("OutboundLink")],1)])])}),[],!1,null,null,null);_.default=r.exports}}]);